package Assignment_2;

import edu.neu.coe.info6205.sort.elementary.InsertionSort;
import edu.neu.coe.info6205.util.Benchmark_Timer;

import java.util.Arrays;
import java.util.Collections;
import java.util.function.Supplier;

public class InsertionSortTimer {
    int numberOfRepetitions = 1;

    public static void main(String[] args) {

       /* Integer[] randomArray1 = new Integer[]{3, 48, 59, -94, 32, -68, -58, 12, -44, 92, -11, 8, 65, -31, -61, -53, 22, -74, 76, -48, 97, 67, -82, 79, -4, -3, -33, 10, -51, -20, 49, 57, -92, 74, -64, 88, -36, -40, 27, 16, -16, -75, 55, -79, 91, 4, -89, 5, 30, 77, -91, 38, 71, 61, 94, 52, -86, -60, 42, -23, 68, -71, 82, 24, 15, 2, -100, 89, 7, 20, -55, -43, 43, -35, 14, -8, 60, -73, 98, 6, 33, 56, 93, -69, -80, -42, 63, -26, 26, -39, 31, 45, -37, -56, -93, -88, 66, 46, 0, 58};
        insertionSortTimer.randomArray(randomArray1);
        insertionSortTimer.orderedArray(randomArray1);
        insertionSortTimer.partialOrdered(randomArray1);
        insertionSortTimer.reverseOrdered(randomArray1);


        Integer[] randomArray2 = new Integer[]{-2, -76, -32, -21, 78, 51, -28, -16, 44, -8, -99, 72, -93, 66, 12, 42, -79, 5, -6, 22, 13, 60, -31, -84, -65, -9, 92, -33, -56, -48, 85, 20, 89, 73, -92, -88, -94, -7, -98, 23, 21, 14, 65, 46, 97, 11, 19, -11, 27, -73, 62, -85, 68, -35, -50, 63, 6, -39, 26, -5, 94, 15, 57, -97, -25, 75, -54, -82, 40, -43, -3, 67, 76, -24, -81, 35, -91, 90, -100, -70, 87, 3, -44, 4, -46, 74, 25, 84, 59, -55, -1, 32, -4, 53, -26, -41, -51, 24, 1, 56, 71, -53, -22, -37, -72, 18, 16, -60, -57, -87, -96, 34, 82, -18, -68, 69, -10, 30, 47, -29, 39, 79, 8, -15, 48, 64, 33, -14, 81, 38, -67, -49, -89, 86, 80, 0, -23, -47, 70, 54, -74, 99, -52, 52, -40, 36, -66, 100, 41, -13, -45, -63, 17, 49, -83, -77, -30, 55, -36, -61, 43, 50, 28, -20, 7, -78, 83, 31, 45, -58, -59, 95, 29, 77, -38, -27, 88, -64, -75, -69, -86, 2, -71, -62, 91, 37, 96, -34, 10, 93, -17, -90, 58, 9, 61, -42, -95, 98, -19, -80};
        insertionSortTimer.randomArray(randomArray2);
        insertionSortTimer.orderedArray(randomArray2);
        insertionSortTimer.partialOrdered(randomArray2);
        insertionSortTimer.reverseOrdered(randomArray2);

        Integer[] randomArray3 = new Integer[]{370, 232, 189, -32, 27, 248, -53, -3, 191, 267, -16, 180, 86, 47, -99, -90, -95, 325, 69, -82, 125, 176, 398, -86, 295, 324, 301, -83, 82, 211, 273, 62, 161, 188, -29, 2, 205, -89, -27, 382, 155, 169, 197, 15, 70, 48, 160, -64, 10, -58, 235, 220, 141, 175, -49, 79, 243, 158, -1, -77, 71, 199, 353, -46, 369, 75, 39, -4, 239, 36, 63, 122, 343, 65, 209, 138, 184, 208, 26, 363, 365, 333, 227, -81, 275, 373, 319, 354, 359, 278, -14, 337, 67, 74, 0, 136, 246, 231, -25, 331, -52, 279, 372, -78, 110, 186, 200, -26, 309, -85, -36, -87, 259, -57, 3, 124, 66, 236, -80, 92, 154, 28, 271, 256, -47, 59, 14, -12, 84, 33, 55, 348, 73, 385, 166, 76, 221, 399, 132, 90, 111, 133, 357, 313, 340, 255, 121, 30, 308, 341, 12, -38, 322, 229, 388, 307, -21, -71, 375, 400, 384, 216, 51, 334, 310, 245, -60, 351, 109, 368, 347, 254, 263, 89, 203, -96, 151, -23, 276, 257, 336, 213, 389, -62, -50, -100, -73, -17, 77, 56, -68, 284, 377, 230, 397, -72, 101, 4, 78, 371, 274, 280, -44, -13, -65, -8, 5, 379, 182, 228, 80, -61, 153, 247, 99, 25, 297, -28, 9, 183, 335, 242, 258, 202, 282, 392, 355, 20, 293, 315, 219, 214, 162, -98, 349, 127, -59, 152, 233, 148, 225, 123, 98, 226, 224, -41, 291, 7, 299, 102, 393, 149, 360, 116, 300, 50, 21, -45, 44, 320, 346, -19, -92, 244, 23, 129, -91, 88, 103, -22, 137, 22, 287, 311, 327, 316, 292, 53, 204, 58, 105, 18, 37, -33, 134, 34, 253, 113, 306, 264, -30, 41, 222, 165, 304, 97, 57, 130, -10, -48, 296, 13, 104, 261, 378, 95, 283, 106, 332, 112, 237, 187, 17, 196, 391, 366, 234, 361, 164, 19, 262, 143, 303, 281, 338, 145, 115, 24, 35, 72, 142, -94, 317, 119, 146, 108, 364, 206, 173, 64, 150, 163, 342, 380, 8, -70, -75, -42, -15, 52, 223, 395, 381, -31, 386, 179, 238, 159, -18, 91, 178, 286, 120, 46, 29, 210, -24, 172, -43, -54, -5, 305, 252, 193, 171, 266, 268, 249, 126, 87, 16, 285, 318, 326, 376, 328, 94, 215, 107, 81, 396, 42, 128, 260, -55, 6, 330, 269, 345, 156};
        insertionSortTimer.randomArray(randomArray3);
        insertionSortTimer.orderedArray(randomArray3);
        insertionSortTimer.partialOrdered(randomArray3);
        insertionSortTimer.reverseOrdered(randomArray3);

        Integer[] randomArray4 = new Integer[]{333, 186, 168, 558, 47, 378, 701, -54, 503, 289, 726, 294, 287, 108, 566, 157, 107, 703, 79, 25, 754, -3, 394, 604, 303, 407, 766, 504, -74, 400, 555, 115, -72, 597, 111, 706, 286, 442, 196, 199, 260, 608, 753, 54, 765, 247, 36, 780, 90, 64, 383, 94, 551, -25, 185, 117, 589, 572, 471, -23, 485, 714, 197, 344, 298, 358, 637, 611, 586, 423, 141, 50, 411, 128, -56, 578, 438, 31, -37, 539, 271, 470, 297, 568, 51, 643, 599, 122, 5, 100, -81, 730, 774, 56, 436, 175, 92, 187, -49, -5, -13, 695, 448, 40, 587, 124, 644, 418, 101, 437, 43, 18, 638, 281, 648, 140, -83, 533, 530, 484, 217, 4, 473, -28, -47, 363, 35, 464, 600, 750, 661, 690, 426, 782, 767, 112, 309, 307, 284, 335, 167, 80, 723, 67, 245, 429, 155, 121, 191, 2, 71, 1, 70, 616, 657, 55, 710, 652, 467, 498, 456, 675, 664, -73, 280, 269, 642, 576, 277, 8, 702, 525, 215, 306, 669, 561, 150, 728, 798, 85, 479, 663, 493, 146, -91, 734, 262, 747, 361, -57, 81, 428, 449, 192, 221, 501, -79, 109, 166, 601, 469, 126, 796, 773, 545, 37, 374, 605, 114, 462, 352, 283, -96, 482, 86, 759, 497, 116, 285, 12, -4, 161, 73, 689, 419, 106, 560, 795, 387, -45, -86, 756, 207, 488, 149, 582, 139, -98, 302, 120, -69, 575, 194, 160, 270, 619, -92, 528, 328, 636, -46, 189, 676, 621, 443, 13, 268, 380, 258, 320, -80, 300, 235, 384, 772, 27, 588, 360, 144, 431, -16, 296, 275, 202, 223, 764, 353, 405, -9, 477, -82, 170, 682, -78, 127, 401, 468, 680, 722, 444, 45, 143, 330, 717, 234, 762, -59, 499, 304, 174, 171, 622, 445, -50, 238, 162, -52, 41, 398, -30, 537, 527, -7, -12, 777, 776, 180, 409, 3, 310, -29, 33, 758, 154, 75, -84, -90, 446, 571, 494, 641, 455, 293, 21, 332, 707, 625, 256, 7, 424, 696, 62, 357, 607, 156, -44, 740, 46, 278, 243, 712, 259, -62, 26, 752, 624, 483, 478, 130, 48, 793, 113, 313, 410, 709, 592, 153, 119, 105, 700, 188, 727, 665, 229, -2, 711, 210, 595, 408, -88, 308, 490, 158, 433, 609, 778, 102, -39, 203, 390, 98, 249, 526, 550, 653, 177, 182, 74, 452, 453, 771, 147, 273, 708, -35, 421, 272, 63, 76, 745, 282, 176, 28, 768, 720, 564, 311, 721, 746, 341, 61, 617, -19, 794, 263, 339, 725, 84, 639, -11, 523, 69, -21, 20, 562, 629, 163, -10, 251, 790, -55, 579, 142, 735, -24, 430, 29, 591, 495, 151, 543, 312, 39, 224, -71, 548, 606, -95, 10, 169, 369, 38, 635, 381, -70, 49, -63, 164, 190, 450, 761, -68, 547, 760, 301, 506, 658, 206, 510, 593, 460, 366, -8, 519, 250, 324, 662, 32, 786, 58, 692, 22, 118, 404, 729, 791, 627, 93, 502, 514, 500, 172, 693, 632, 148, 136, 684, 491, 267, 620, -61, 521, 505, 451, 789, 569, 567, 694, 524, 678, 465, 435, 434, 95, 393, 228, 337, 672, -87, 687, -94, 372, 630, -31, 145, 654, 178, 751, 651, 763, 340, 364, 534, 656, 392, 279, 291, 9, 343, 570, -27, 201, 508, 388, 536, 227, 515, 475, 674, 650, -64, -22, 646, 787, 614, 770, 463, 355, 184, 512, 11, 354, 57, 68, 216, 412, 242, 792, 594, 219, 511, 715, 441, 347, 457, 681, 738, -58, 368, 645, 209, 556, 416, 686, 274, 179, -100, 688, 214, 134, 546, 671, 704, 425, 342, 91, 87, 476, -15, 89, -65, 379, -14, 406, 34, 212, 487, 137, 557, 691, 660, 276, 480, 757, 666, 755, 554, 517, -26, 53, -36, 133, 522, 321, 65, 220, 649, 422, 200, 233, 230, 315, 496, 640, 386, 677, 59, 348, 373, 513, 507, 800, 489, 239, 317, 538, 329, 573, 42, 290, -60, 520, 159, 205, 788, 193, 697, 432, 420, 211, 125, 739, 213, 633, 370, -1, -32, 553, 99, 466, 323, 397, 181, 461, 583, 610, 667, 544, 254, 14, -17, 264, 60, 391, 346, 705, 459, 266, 395, 382, 741, 72, -89, -20, 236, 580, 231, 698, 724, 77, 253, 66, 769, 248, 19, 359, 744, 82, 17, 244, 316, 623, 472, 518, 590, 326, 399, -33, 240, 509, 596, 103, 16, 585, 779, -42, 659, 257, 385, 24, -76, 492, -93, -66, 628, 350, 718, 685, -43, -48, 376, 719, 559, -77, 743, 733, -53, 549, -85, 152, 110, 602, 6, 531, 737, 631, 784, 532, 615, 613, 338, 165, 325, 440, 314, 0, 668, 322, 474, 785, 183, -41, 481, 351, 742, 336, 327, 402, 138, 454, 447, 577, 673, 198, 529, 241, 389, 131, 783, 618};
        insertionSortTimer.randomArray(randomArray4);
        insertionSortTimer.orderedArray(randomArray4);
        insertionSortTimer.partialOrdered(randomArray4);
        insertionSortTimer.reverseOrdered(randomArray4);

        Integer[] randomArray5 = new Integer[]{509, 1578, 579, 148, 829, 345, 740, 877, -45, 1172, 1408, 282, 699, 975, 177, 169, 1488, 1268, -78, 41, 1468, -72, 217, 381, 1436, 905, 382, 555, 1020, 246, 1008, 244, 445, -53, 1385, 851, 948, 1004, 401, 599, 1423, 1064, 1266, 865, 192, 1288, 421, 619, 258, 849, 1102, 1576, 1093, 931, 1424, 918, 284, 1272, 1261, 688, 610, 600, 494, -88, 1587, 562, 183, 910, 519, 60, 1070, 1086, 966, 1133, 837, 1046, 87, 553, 1098, 266, 1306, 1584, 1080, 1545, 621, 338, 1065, 585, 812, 52, 131, 483, 770, 1361, 1406, -9, 659, 922, -54, 235, 1307, 868, 652, 1543, 556, 508, 1489, 805, 1339, 861, 1091, 1492, 1393, 1277, 1263, 1431, 651, 98, 1157, 202, 1326, 895, 1185, 869, -33, 1039, 108, 214, 324, 271, 1251, 187, 281, 634, 1330, 1395, 486, 1083, 1126, 1372, 249, 1027, 44, 311, 1294, 707, 754, 1568, 847, -41, 1471, 97, -16, -55, 1074, 915, 1225, 577, -82, 1265, 34, 286, 1399, 1110, 1177, 26, 573, 158, 110, 639, 1386, 1254, 819, 952, 988, 92, 1583, 693, 479, -51, 1114, 808, 1160, 336, 385, 801, 484, 1447, 264, 1542, 913, -97, 767, 961, 1161, 1045, 1163, 534, 810, 821, 523, 1226, 732, 430, 963, 713, 1193, 893, 369, 353, 897, 1049, 39, 541, 218, 130, 605, 80, 1435, 1380, 807, 302, 1455, 974, 457, 283, 959, 1496, 153, 104, 1289, 40, 1527, 174, 407, 661, 27, 443, 1504, 19, 797, 1356, 1550, 1132, 1594, 424, 515, 1476, 547, 125, 239, 107, 1279, 348, 1318, 912, 292, 213, 154, 406, 263, 998, 1440, 1042, 395, 591, 265, 1509, 773, -77, 818, 1534, 1095, 1467, 481, 999, 1338, 1437, 433, 852, 1142, 388, 168, 199, 1012, 224, 252, 972, 733, 728, 726, 993, 765, 1484, 721, 1442, 901, 90, 418, 132, 574, 333, 1215, 1118, 1054, 1405, 712, 133, -21, 1349, 720, 1195, 70, 1532, 1152, 1283, 1139, 431, 209, 1255, 1565, -10, 1345, -4, 833, 114, 1481, -1, 1073, 393, 888, 450, 526, -36, 85, 287, 536, 1122, 1309, 1365, 1149, 134, 954, 1384, 1308, 1335, 1299, 1040, 1485, 1009, 1036, -18, 906, 917, 1202, 1465, 1588, 527, 518, 1451, 823, 1137, 13, 635, 112, 72, 95, 749, 205, 1221, 876, 5, 268, 854, 24, 690, 387, 1499, 446, 77, 434, 570, 1276, 1400, -50, 1331, 930, 141, 352, -2, 502, 1173, 1019, 396, 489, 1507, 885, 135, 367, 1387, 533, 106, 697, 1420, 394, 1210, 951, 1477, 129, 587, 759, 1063, 1267, 886, 946, 1358, -100, 1001, 251, 1403, 1367, 1022, 1325, 1273, 1341, 1214, 1158, -20, 964, 184, 694, 472, 200, 63, 1490, 698, 1417, 156, 846, 1171, 1517, 986, 1096, -87, -56, 1113, 1123, 689, 117, 1111, 212, 1466, 640, 1497, 482, 744, 150, 550, 737, 802, 834, 611, 1462, -61, 167, 152, 546, -75, 1287, 578, 928, 88, 1362, 20, 558, 552, 1359, 751, 1427, -27, 364, 956, 164, 1212, 101, 987, 297, 1084, 1305, 1327, 1487, 146, 1196, 1174, 548, 1364, 628, 1, 459, 1598, 685, 1366, 1038, 701, 1303, 1421, 1016, 1230, 1374, 791, 705, 402, 189, 1005, 250, 55, 1011, 638, -84, 933, 1589, 323, 1293, 473, 780, 42, 514, 313, 1311, 566, 208, 1170, 162, 934, 589, 1087, 391, 668, 310, 848, 1498, 363, 317, 318, -28, 461, 1350, 1200, 790, 62, 1169, 379, 73, 962, 1208, 373, 1432, 965, 1304, 1138, 463, 119, 166, 939, 517, 1179, 731, 932, 320, 761, 1559, 109, 48, 504, 991, 1530, 658, 1101, -64, 1401, 795, 300, 942, 760, 467, 1236, 1457, -23, -38, 344, 551, 299, 1024, 163, -29, 729, 625, 1270, 116, 350, -68, 1072, 1290, 1438, 1323, 1218, 1319, 1566, 230, 793, 1473, 1567, 495, 1458, 1523, 1237, 1057, 648, 889, 678, 490, 1207, 71, 3, 907, 18, 1076, 416, 103, 976, 727, 1357, 708, 1549, 1596, 1342, -89, 581, 764, 411, 1569, 1454, 160, 419, 580, 298, 1194, -81, 329, -63, 234, 1425, 285, 783, 1449, 157, 1464, 1394, 67, 1414, 220, 400, 1150, 1389, 1242, 1155, 384, 594, 873, 448, 529, 824, -99, 1013, 159, 102, 497, 229, 831, 289, 362, 470, -6, 1483, 672, 545, 615, 1146, 432, 692, 989, 601, -71, 866, 181, 941, 853, 334, 471, 1503, 677, 540, 521, 1192, 900, 564, 503, 626, 1591, -74, 6, 1493, 663, 1429, 664, 803, 161, 1314, 786, 792, 1213, 330, 1322, 69, 1478, 197, 674, 1153, 642, -32, 982, 1360, 1007, 21, 709, 957, 204, 337, 1302, 590, 1430, 583, 316, 1297, -94, 772, 1571, -80, 512, 755, 28, 763, 903, 113, 1416, 516, 91, 1296, 1119, 719, 722, 816, 1105, 392, 45, 666, 66, 1021, 637, 980, 136, 137, 1544, 1056, 1032, 1411, 623, 1375, 437, 1459, 1068, 682, 532, 522, 356, 439, 857, 398, 887, 1561, 210, 501, 47, 1233, 1162, 500, 468, 143, 147, 544, 64, 572, 1582, 1505, 597, 1433, 1203, 1529, 83, 647, 17, 1189, 879, 1383, 1244, 390, 237, 122, 1538, 1048, 11, 798, 612, 1514, 81, 1586, 294, 978, 938, 171, 1089, -31, 1348, 929, 118, 1181, 305, 139, 1078, 15, 680, 935, 68, 1228, 1450, 576, 1332, 228, 1482, -91, 243, 465, 16, 702, 1461, 1329, 735, 771, 1262, 1127, 1463, 1460, 687, 1295, 1183, 1085, 386, 23, 280, 1147, 1274, 1351, 326, 1593, 256, 718, 669, 1168, 201, 126, 1340, 1075, -58, 1240, 1197, 1140, 128, 1557, 650, 1103, 867, 1355, 1354, 1041, 269, 1211, 586, -15, 138, 221, 796, 1006, 455, 1015, 923, 596, 255, 567, 1188, 730, 59, 1053, 1537, 1491, 186, -37, 1235, -3, 464, 413, 1579, 1480, 506, 309, 1336, 1398, 306, 1229, 592, 799, 1109, 1190, 983, 1570, 312, 609, 641, 655, 981, 543, 1524, 370, 1333, 505, 560, 629, 1241, 845, 1525, 838, 747, 549, 724, 1343, 717, 115, 1148, -86, 188, 1243, 1575, 499, 936, 1246, 1515, 403, 909, 428, 920, 1313, 1443, 777, 559, 84, 769, 681, 859, 921, 260, -70, 185, -13, 752, 568, 417, 1100, 29, 691, 725, 1227, 1035, 1077, 1269, 355, 1334, 179, 140, -90, 30, 399, 1260, 1533, 1526, 1258, 864, 33, 321, 10, 1552, 86, 193, 1198, 240, -26, 830, 1026, 54, 513, 1551, 530, 902, 1167, 1379, 1082, 475, 182, 75, 1506, 1446, 227, 1597, 762, 1081, 758, 646, 1595, 679, 485, 375, -11, -59, 1371, 684, 710, 1494, 1376, 1300, 766, 804, 279, 1033, 1535, 656, 404, 178, 1166, 1112, 636, 1410, 632, 155, 1186, 745, 1209, 332, 1444, 145, 1556, 1191, 734, -5, 226, 351, 1453, 673, 1392, 703, 1222, 1257, 451, 1136, 875, 93, 1280, 203, 671, 374, 844, 242, 654, 466, 616, 1415, 1520, 787, 960, 604, 602, 1378, 105, 1555, 828, 871, 1312, 971, 700, 301, 955, 191, 1452, 377, -34, 1264, 307, 371, 825, 1044, 1282, 1511, 420, 176, 1346, 9, 1129, 1285, 836, 247, 995, 43, 477, 531, 524, 496, 380, 899, 1580, 121, 716, 291, 1144, 425, 460, 715, 958, 397, 984, 1599, 206, 862, 940, -57, -52, 1518, 1573, 1540, -67, 1061, 779, 657, 339, 94, -73, -79, 1088, -60, 1052, 440, 608, 554, 1248, 1115, 1037, 1069, 1301, 1291, 456, 144, 1310, 37, 967, 904, 1412, 525, 1252, 1029, 1000, 839, 328, 273, 99, 196, 474, 1121, 378, -96, 1347, 180, 575, 1099, 841, 462, 368, 1047, 1182, 695, 219, 878, 1259, 1344, 361, 272, 826, 1388, 624, 270, 383, -24, 606, 1178, -35, 488, 288, -83, 241, 1370, 341, 704, 1002, 588, 943, 124, 1448, 53, 1337, 970, 511, 427, 1031, 100, 748, 254, 354, 884, 223, 937, -7, 1562, 1034, 1145, 1522, -44, 478, 359, 1563, 492, 1391, 856, 267, 1472, 441, 776, 1050, -95, 1165, -85, 794, 842, 1108, 322, 781, 1368, 303, 449, 1512, 38, 528, 1409, 660, 1445, 742, 1120, 458, 996, 58, 1521, 571, 120, 1014, 1553, 1060, 855, 643, -98, 520, -43, -40, 1548, 1217, 46, 1592, 410, 498, 881, 1043, 603, 1541, 1128, 389, 822, 423, 1407, 1205, 231, 1539, 582, 741, 1206, 686, 883, 1239, -39, 1316, 429, 860, 1224, 170, -12, -65, 444, 1107, 1581, 1352, 925, 12, 7, 653, 1292, 123, 476, 1184, 1124, 278, 908, 665, 620, 1434, 840, 308, 1245, 408, 1422, 827, 253, 785, 510, 1397, 739, 1143, 1404, 683, 622, 1151, 469, 738, 1558, 1508, 96, 809, 435, 775, 595, 454, 919, 711, 1396, 487, 1560, -69, 1572, 1298, 788, 1286, 1474, 149, 814, 1531, 295, 257, 409, 426, 537, 607, 412, 891, 927, 436, 714, 1028, 1418, 1536, 172, 1413, 898, 195, 325, 850, 346, 969, -48, 896, 1055, 491, 997, -62, 1590, 1500, 670, 1051, 858, 51, 843, 880, 1574, 414, 618, 1201, 1390, 820, 1135, 319, 914, 736, 151, 1058, 662, 645, 593, 261, 1164, 372, 753, 74, 1479, 335, 1369, 1469, 25, 743, 1516, 233, 630, 1130, 480, 992, 376, 1223, 1275, 778, 1546, 953, 1501, 111, 415, 561, 1475, -8, 926, 617, 442, 676, -47, 1187, 811, 1321, 293, 453, 644, 405, 631, 911, 1600, 1271, 1204, 2, 331, 245, 924, -92, -25, 757, 950, 1156, 347, 565, 539, 8, 1116, 4, 190, 173, 949, 1219, 1176, 947, -46, 1066, 746, 1317, 584, 675, 236, 1419, 1199, 863, 296, 1154, 357, 142, 422, 1439, 977, 598, 232, 985, -66, 1094, 1456, 50, 750, 1278, 979, 1470, 1564, 1426, 1141, 1030, 1234, 1159, 696, 789, 1125, 360, 452, 1547, 1528, 314, 1381, 945, 1315, 277, 1510, 1320, 774, 1071, 1231, -93, 274, 343, 211, 194, 315, 1284, 1585, -76, 365, 366, 1441, 557, 990, 349, 1247, 1134, 614, 806, 1249, 76, 0, 1328, 813, 649, 1554, 276, 832, 89, 1428, 56, 890, 944, 65, 994, 340, 892, 535, 1025, 870, 225, 127, -17, 1092, 1067};
        insertionSortTimer.randomArray(randomArray5);
        insertionSortTimer.orderedArray(randomArray5);
        insertionSortTimer.partialOrdered(randomArray5);
        insertionSortTimer.reverseOrdered(randomArray5);*/


        new InsertionSortTimer().randomArray(new Integer[]{5,3,6,2});
        new InsertionSortTimer().partialOrdered(new Integer[]{5,3,6,2});
        new InsertionSortTimer().orderedArray(new Integer[]{5,3,6,2});
        new InsertionSortTimer().reverseOrdered(new Integer[]{5,3,6,2});




    }

    public void calculateTime(String desc, Integer[] input){
        double meanOfArrayInMillis = 0;

            Benchmark_Timer benchmark_timer = new Benchmark_Timer(desc,null, (a)-> InsertionSort.sort(input),null);
            //meanOfArrayInMillis = benchmark_timer.run(true,numberOfRepetitions);
            Supplier<Integer[]> supplier = () -> input;
            meanOfArrayInMillis = benchmark_timer.runFromSupplier( supplier,numberOfRepetitions);

        
        System.out.println(desc+" "+meanOfArrayInMillis + ", number of elements:"+ input.length);
    }

    public void randomArray(Integer[] randomArray){
        System.out.println(Arrays.toString(randomArray));
        new InsertionSortTimer().calculateTime("randomArray -> Average time in millis:",randomArray);

    }

    public void orderedArray(Integer[] orderedArray){
        Arrays.sort(orderedArray);
        System.out.println(Arrays.toString(orderedArray));
        new InsertionSortTimer().calculateTime("orderedArray -> Average time in millis:",orderedArray);
    }

    public void partialOrdered(Integer[] partialOrdered){
        System.out.println(Arrays.toString(partialOrdered));
        Arrays.sort(partialOrdered, 0, (partialOrdered.length)/2);
        System.out.println(Arrays.toString(partialOrdered));
        new InsertionSortTimer().calculateTime("partialOrdered -> Average time in millis:",partialOrdered);
    }


    public void reverseOrdered(Integer[] reverseOrdered){
        Arrays.sort(reverseOrdered, Collections.reverseOrder());
        System.out.println(Arrays.toString(reverseOrdered));
        new InsertionSortTimer().calculateTime("reverseOrdered -> Average time in millis:",reverseOrdered);

    }


}
